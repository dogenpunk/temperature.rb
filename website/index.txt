h1. temperature


h2. What

Temperature makes it easy to deal with temperatures in Ruby, but
adding mixin methods to numbers and strings.  

This was inspired by using Ruby to manipulate data from my home
weather station, and wanting it to keep track of the units for me so
that I didn't have to think about that in code.

h2. Installing

<pre syntax="ruby">sudo gem install temperature</pre>

h2. Demonstration of usage

<pre syntax="ruby">freezing_in_F = 32
freezing_in_C = freezing_in_F.to_C

boiling_in_C = 100
boiling_in_C.units = "C"
boiling_in_F = boiling_in_C.to_F

absolute_zero = "0K".to_degrees
absolute_zero_in_C = absolute_zero.to_C
absolute_zero_in_F = absolute_zero.to_F</pre>

There is also support to calculate dewpoint from relative humidity
based on the NOAA approximation documented here -
http://en.wikipedia.org/wiki/Dew_point#Closer_approximation

<pre syntax="ruby">dewpoint = 32.dewpoint(45)</pre>

h2. How to submit patches

Read the "8 steps for fixing other people's
code":http://drnicwilliams.com/2007/06/01/8-steps-for-fixing-other-peoples-code/

* github: "http://github.com/sdague/temperature/tree/master":http://github.com/sdague/temperature/tree/master

<pre>git clone git://github.com/sdague/temperature.git</pre>

h3. Build and test instructions

<pre>cd temperature
rake test
rake install_gem</pre>


h2. License

This code is free to use under the terms of the MIT license. 

h2. Contact

Comments are welcome. Send an email to "Sean Dague":mailto:sean@dague.net

